@using Karellen.Web.Helper
@model Karellen.Web.Models.Ocorrencia.NovaOcorrenciaVM
@{
    ViewBag.Title = "Nova Ocorrência";
    var acao = ViewBag.Acao as string;
}

<div id="sidewrapper">
    <div class="sidebar">
        <div class="heading" id="titulo">
            <h1>@acao Ocorrência</h1>
        </div>
        <div id="listingsocorrencia" class="listings">
            @using (Html.BeginForm(acao, "Ocorrencia", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(m => m.Latitude)
                @Html.HiddenFor(m => m.Longitude)
                @Html.HiddenFor(m => m.SessaoId)

                <div class="form-horizontal form-espacado">
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    <div class="form-group listings item">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label", placeholder = "O Título da ocorrência" })
                            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group item ">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.DataAcontecimento, htmlAttributes: new { @class = "control-label" })
                            <div class='input-group date' id='datetimepicker1'>
                                @Html.TextBoxFor(model => model.DataAcontecimento, new { @class = "form-control datepicker" })
                                <span class="input-group-addon" id="datetimepicker">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group listings item">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Detalhes, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Detalhes, new { @class = "form-control", rows = 10 })
                        </div>
                    </div>

                    <div class="form-group listings item">
                        <div class="col-md-12">
                            <label class="control-label">Sexo da vítima: *</label>

                            @Html.RadioButtonFor(model => model.SexoVitima, "Feminino")
                            Feminino

                            @Html.RadioButtonFor(model => model.SexoVitima, "Masculino")
                            Masculino
                        </div>
                    </div>

                    <div class="form-group listings item">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.TemBoletimOCorrencia, htmlAttributes: new { @class = "control-label" })
                            @Html.RadioButtonFor(m => m.TemBoletimOCorrencia, "true")<span> Sim</span>
                            @Html.RadioButtonFor(m => m.TemBoletimOCorrencia, "false")<span> Não</span>
                        </div>
                    </div>
                    <div class="form-group item">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.TipoOcorrencias, htmlAttributes: new { @class = "control-label" })<span> *</span>
                            @Html.OcorrenciasFor(model => model.TipoOcorrencias, new { @class = "chosen-select", data_placeholder = "Escolha o tipo de ocorrência" });
                        </div>
                    </div>


                    <div class="form-group listings item">
                        <div class="col-md-12" style="text-align: center">
                            <label class="control-label">Autor: </label>
                            @Html.OcorrenciaAnonimaFor(model => model.OcorrenciaAnonima, User.Identity.IsAuthenticated, usuarioNome: Session["NomeUsuario"] as string)
                        </div>
                    </div>

                    <div class="form-group  listings item" style="margin-bottom: 15em;">
                        <div class="col-md-12" style="text-align: center">
                            <input type="submit" value="@acao" class="btn btn-default btn-lg btn-primary" id="btn-submit" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="mapa" class="map"></div>

@section scripts {
    <script src="~/Content/karellen/js/Global/navegacao.js" type="text/javascript"></script>
    <script src="~/Content/karellen/js/Ocorrencia/nova.js" type="text/javascript"></script>
}